
server.port=11000

server.servlet.context-path=/
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

mybatis.type-aliases-package=com.cos.blog.model

mybatis.mapper-locations=classpath:mapper/*.xml

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

spring.data.mongodb.host=localhost:27017
spring.data.mongodb.port=27017
spring.data.mongodb.database=MyDB
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://211.58.164.191:8800/pj
spring.datasource.username=TEST
spring.datasource.password=TEST

spring.jpa.show-sql=true
spring.jpa.open-in-view=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.hibernate.use-new-id-generator-mappings=false
spring.jpa.properties.hibernate.format_sql=false

spring.main.allow-circular-references=true

spring.security.oauth2.client.registration.google.client-id=546671564624-1ifo34gjghp8m0lqrcajre7fdhctu5kp.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email, profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8000/login/oauth2/code/google
spring.security.oauth2.client.registration.naver.client-id=vPQ0o6THA5u9n1q1RhBH
spring.security.oauth2.client.registration.naver.client-secret=xo_8akH3pj
spring.security.oauth2.client.registration.naver.scope=name, email
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8000/login/oauth2/code/naver
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response
spring.jackson.serialization.fail-on-empty-beans=false

cos.key=cos1234


# WeatherAPI
weather.api.key=91d6edcc8a4c2a4548c37525dd9cd012

# Naver Papago API
naver.papago.clientId : khoTtXhlYExKOf9reMr6
naver.papago.clientSecret : gareA7MXY3

# Swagger Setting
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# JWT Secret Key
jwt.secret.key="abcd1234abcd1234"

# JWT Access Token (5min)
jwt.token.access.valid.time=300
jwt.token.access.name=jwtAcccessToken

# JWT Refresh Token (50min)
jwt.token.refresh.valid.time=3000
jwt.token.refresh.name=jwtRefreshToken

# JWT Token Creator
jwtw.token.creator=poly

# Eureka Server
# spring.application.name
spring.application.name=CHAT-SERVICE

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Actuator Eureka Client
management.server.port=9001
management.server.address=localhost

# Actuator End Point
management.endpoints.web.exposure.include=*

management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.beans.enabled=true
management.endpoint.info.enabled=true